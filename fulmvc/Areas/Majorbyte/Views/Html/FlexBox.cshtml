@{
    ViewBag.Title = "FlexBox";
    Layout = "~/Areas/Majorbyte/Views/Shared/_MajorLayout.cshtml";
}

<h2>FlexBox</h2>
<div class="flexdemo">
<p >[...] a CSS box model optimized for interface design. It provides an additional layout system alongside the ones already in CSS. 
    [CSS21] In this new box model, the children of a box are laid out either horizontally or vertically, and unused space can be 
    assigned to a particular child or distributed among the children by assignment of "flex" to the children that should expand. 
    Nesting of these boxes (horizontal inside vertical, or vertical inside horizontal) can be used to build layouts in two dimensions. 
    This model is based on the box model in the XUL user-interface language used for the user interface of many Mozilla-based 
    applications (such as Firefox).</p>
</div>

<ol class="round">
    <li class="one">
        <h3>-ms-flex-order</h3>
        <p>The -ms-flex-order property enables you to place elements in ordinal groups, starting with ordinal group 0.</p>
        @Ajax.ActionLink("-ms-flex-order", "flexorder", new AjaxOptions { UpdateTargetId="result"})
        <div id="result">

        </div>
        <input type="button" class="hideButton" value="hide" />
    </li>
    <li class="two">
        <h3>-ms-flex-pack</h3>
      
        <p>Gets or sets a value that specifies how excess space is distributed (along the axis defined by the -ms-flex-direction property) between child elements of the object.</p>
        <div id="flexpack" class="hideFlexPack" >
            @Html.Partial("_FlexPack")
        </div>
        <input type="button" class="toggleHideButton" value="show" />
    </li>
</ol>




@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".hideButton").on("click", function () {
                $("#result").html('');
            });

            $(".toggleHideButton").on("click", function () {
                $("#flexpack").toggleClass("hideFlexPack");
                if ($(this).val() === "show") {
                    $(this).val("hide");
                } else {
                    $(this).val("show");
                }
            });

            $('input:radio').on('change', function () {
                $('.myFlexboxPack').css('-ms-flex-pack', $(this).val());
            })

        });

    </script>
}